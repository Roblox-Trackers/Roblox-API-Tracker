{
  "swagger": "2.0",
  "info": {
    "title": "Badges Api v1",
    "version": "v1"
  },
  "host": "badges.roblox.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/badges/{badgeId}": {
      "get": {
        "tags": [
          "Badges"
        ],
        "summary": "Gets badge information by the badge Id.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "badgeId",
            "description": "The badge Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Badges.Api.BadgeResponse"
            }
          },
          "404": {
            "description": "1: Badge is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "Badges:GetBadge"
          ]
        }
      },
      "patch": {
        "tags": [
          "Badges"
        ],
        "summary": "Updates badge configuration.",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "badgeId",
            "description": "The badge Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "request",
            "description": "The request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Badges.Api.UpdateBadgeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.ApiEmptyResponseModel"
            }
          },
          "400": {
            "description": "6: Text moderated."
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n2: You do not have permission to manage this badge."
          },
          "404": {
            "description": "1: Badge is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "Badges:UpdateBadge"
          ]
        }
      }
    },
    "/v1/badges/metadata": {
      "get": {
        "tags": [
          "Badges"
        ],
        "summary": "Gets metadata about the badges system.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Badges.Api.BadgeMetadataResponse"
            }
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "Badges:GetMetadata"
          ]
        }
      }
    },
    "/v1/universes/{universeId}/badges": {
      "get": {
        "tags": [
          "Badges"
        ],
        "summary": "Gets badges by their awarding game.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "universeId",
            "description": "The universe Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results per request.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "enum": [
              10,
              25,
              50,
              100
            ]
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "The paging cursor for the previous or next page.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "description": "The order the results are sorted in.",
            "type": "string",
            "default": "Asc",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Badges.Api.BadgeResponse]"
            }
          },
          "404": {
            "description": "3: The game is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "Badges:GetBadgesByAwarder"
          ]
        }
      },
      "post": {
        "tags": [
          "Badges"
        ],
        "summary": "Creates a new badge.",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "universeId",
            "description": "The ID of the universe to create the badge for.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "formData",
            "name": "name",
            "description": "The badge name.",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "description",
            "description": "The badge description.",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "paymentSourceType",
            "description": "Whether or not to pay for the badge with user funds, or group funds. ['User' = 1, 'Group' = 2]",
            "type": "integer",
            "format": "int32",
            "enum": [
              1,
              2
            ]
          },
          {
            "in": "formData",
            "name": "files",
            "description": "The badge icon.",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "expectedCost",
            "description": "User expected cost of a badge.",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.Responses.Badges.BadgeResponseV2"
            }
          },
          "400": {
            "description": "11: The badge icon is invalid.\r\n14: Invalid badge name.\r\n15: Invalid badge description.\r\n16: Payment source is invalid.\r\n18: Expected badge cost is different from the actual badge cost."
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n6: Text moderated.\r\n12: You do not have permission to manage this game's badges.\r\n17: Insufficient funds."
          },
          "404": {
            "description": "3: The game is invalid or does not exist."
          },
          "429": {
            "description": "13: Too many requests, try again later."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "Badges:CreateBadge"
          ]
        }
      }
    },
    "/v1/universes/{universeId}/free-badges-quota": {
      "get": {
        "tags": [
          "Badges"
        ],
        "summary": "Gets the number of free badges left for the current UTC day by their awarding game.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "universeId",
            "description": "The universe Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "404": {
            "description": "3: The game is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "Badges:GetFreeBadgesQuotaByAwarder"
          ]
        }
      }
    },
    "/v1/users/{userId}/badges": {
      "get": {
        "tags": [
          "Badges"
        ],
        "summary": "Gets a list of badges a user has been awarded.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of results per request.",
            "type": "integer",
            "format": "int32",
            "default": 10,
            "enum": [
              10,
              25,
              50,
              100
            ]
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "The paging cursor for the previous or next page.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "description": "The order the results are sorted in.",
            "type": "string",
            "default": "Asc",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Badges.BadgeResponseV2]"
            }
          },
          "404": {
            "description": "4: User is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "Badges:GetBadgesByUser"
          ]
        }
      }
    },
    "/v1/users/{userId}/badges/awarded-dates": {
      "get": {
        "tags": [
          "BadgeAwards"
        ],
        "summary": "Gets timestamps for when badges were awarded to a user.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "badgeIds",
            "description": "The CSV of badge Ids.",
            "required": true,
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Badges.Api.BadgeAwardResponse]"
            }
          },
          "400": {
            "description": "5: Too many badge Ids."
          },
          "404": {
            "description": "4: User is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "BadgeAwards:GetBadgeAwardDates"
          ]
        }
      }
    },
    "/v1/user/{userId}/badges/{badgeId}": {
      "delete": {
        "tags": [
          "BadgeAwards"
        ],
        "summary": "Removes a badge from the user.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "path",
            "name": "badgeId",
            "description": "The badge Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.ApiEmptyResponseModel"
            }
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed"
          },
          "404": {
            "description": "1: Badge is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "BadgeAwards:DeleteBadgeAward"
          ]
        }
      }
    },
    "/v1/user/badges/{badgeId}": {
      "delete": {
        "tags": [
          "BadgeAwards"
        ],
        "summary": "Removes a badge from the authenticated user.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "badgeId",
            "description": "The badge Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.ApiEmptyResponseModel"
            }
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed"
          },
          "404": {
            "description": "1: Badge is invalid or does not exist."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "BadgeAwards:DeleteBadgeAward"
          ]
        }
      }
    }
  },
  "definitions": {
    "Roblox.Badges.Api.BadgeAwardResponse": {
      "description": "The result of being awarded a badge.",
      "type": "object",
      "properties": {
        "badgeId": {
          "format": "int64",
          "description": "The badge Id.",
          "type": "integer"
        },
        "awardedDate": {
          "format": "date-time",
          "description": "When the badge was awarded.",
          "type": "string"
        }
      }
    },
    "Roblox.Badges.Api.BadgeMetadataResponse": {
      "description": "Metadata about badges.",
      "type": "object",
      "properties": {
        "badgeCreationPrice": {
          "format": "int64",
          "description": "The cost in Robux for creating a new badge.",
          "type": "integer"
        },
        "maxBadgeNameLength": {
          "format": "int32",
          "description": "The max length for a badge name.",
          "type": "integer"
        },
        "maxBadgeDescriptionLength": {
          "format": "int32",
          "description": "The max length for a badge description.",
          "type": "integer"
        }
      }
    },
    "Roblox.Badges.Api.BadgeResponse": {
      "description": "A response containing badge information.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The badge Id.",
          "type": "integer"
        },
        "name": {
          "description": "The name of the badge.",
          "type": "string"
        },
        "description": {
          "description": "The badge description.",
          "type": "string"
        },
        "displayName": {
          "description": "The localized name of the badge.",
          "type": "string"
        },
        "displayDescription": {
          "description": "The localized badge description.",
          "type": "string"
        },
        "enabled": {
          "description": "Whether or not the badge is enabled.",
          "type": "boolean"
        },
        "iconImageId": {
          "format": "int64",
          "description": "The badge icon asset Id.",
          "type": "integer"
        },
        "displayIconImageId": {
          "format": "int64",
          "description": "The localized badge icon asset Id.",
          "type": "integer"
        },
        "created": {
          "format": "date-time",
          "description": "When the badge was created.",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "description": "When the badge was updated.",
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/Roblox.Web.Responses.Badges.BadgeAwardStatisticsResponse"
        },
        "awardingUniverse": {
          "$ref": "#/definitions/Roblox.Badges.Api.UniverseResponse"
        }
      }
    },
    "Roblox.Badges.Api.UniverseResponse": {
      "description": "A response containing universe information.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The universe Id.",
          "type": "integer"
        },
        "name": {
          "description": "The universe name.",
          "type": "string"
        },
        "rootPlaceId": {
          "format": "int64",
          "description": "The description of the universe.",
          "type": "integer"
        }
      }
    },
    "Roblox.Badges.Api.UpdateBadgeRequest": {
      "description": "A request model used for updating badge information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The new badge name.",
          "type": "string"
        },
        "description": {
          "description": "The new badge description.",
          "type": "string"
        },
        "enabled": {
          "description": "The new enabled state of the badge.",
          "type": "boolean"
        }
      }
    },
    "Roblox.Paging.ExclusiveStartKeyCursor[System.String]": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "description": " ['Asc' = 1, 'Desc' = 2]",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "pagingDirection": {
          "format": "int32",
          "description": " ['Forward' = 1, 'Backward' = 2]",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "discriminator": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Roblox.Web.Responses.Badges.BadgeAwardStatisticsResponse": {
      "type": "object",
      "properties": {
        "pastDayAwardedCount": {
          "format": "int64",
          "type": "integer"
        },
        "awardedCount": {
          "format": "int64",
          "type": "integer"
        },
        "winRatePercentage": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Roblox.Web.Responses.Badges.BadgeResponseV2": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayDescription": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "iconImageId": {
          "format": "int64",
          "type": "integer"
        },
        "displayIconImageId": {
          "format": "int64",
          "type": "integer"
        },
        "awarder": {
          "$ref": "#/definitions/Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Badges.BadgeAwarderType]"
        },
        "statistics": {
          "$ref": "#/definitions/Roblox.Web.Responses.Badges.BadgeAwardStatisticsResponse"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Badges.BadgeAwarderType]": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": " ['Place' = 1]",
          "enum": [
            1
          ],
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Roblox.Web.WebAPI.ApiEmptyResponseModel": {
      "type": "object"
    },
    "Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Badges.Api.BadgeAwardResponse]": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Badges.Api.BadgeAwardResponse"
          }
        }
      }
    },
    "Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Badges.Api.BadgeResponse]": {
      "type": "object",
      "properties": {
        "previousPageCursor": {
          "type": "string"
        },
        "nextPageCursor": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Badges.Api.BadgeResponse"
          }
        }
      }
    },
    "Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Badges.BadgeResponseV2]": {
      "type": "object",
      "properties": {
        "previousPageCursor": {
          "type": "string"
        },
        "nextPageCursor": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.Web.Responses.Badges.BadgeResponseV2"
          }
        }
      }
    },
    "Roblox.Web.WebApi.FormData.IUploadedFile": {
      "type": "file",
      "properties": {
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "Stream": {
          "$ref": "#/definitions/System.IO.Stream"
        },
        "ContentEncoding": {
          "format": "int32",
          "description": " ['None' = 0, 'GZip' = 1, 'Deflate' = 2, 'Brotli' = 4, 'All' = -1]",
          "enum": [
            0,
            1,
            2,
            4,
            -1
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "System.IO.Stream": {
      "type": "object",
      "properties": {
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        },
        "CanWrite": {
          "type": "boolean",
          "readOnly": true
        },
        "CanSeek": {
          "type": "boolean",
          "readOnly": true
        },
        "CanTimeout": {
          "type": "boolean",
          "readOnly": true
        },
        "Length": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "Position": {
          "format": "int64",
          "type": "integer"
        },
        "ReadTimeout": {
          "format": "int32",
          "type": "integer"
        },
        "WriteTimeout": {
          "format": "int32",
          "type": "integer"
        }
      }
    }
  }
}