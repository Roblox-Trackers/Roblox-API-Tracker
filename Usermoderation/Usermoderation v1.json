{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "UserModeration Api v1"
  },
  "host": "usermoderation.roblox.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/not-approved": {
      "get": {
        "tags": [
          "UserModeration"
        ],
        "summary": "Get the data for not approved for a currently authenticated but punished user.",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the worst unacknowledged punishment and its\r\n            its corresponding bad utterances, if exists. Otherwise, returns an empty response.",
            "schema": {
              "$ref": "#/definitions/Roblox.UserModeration.Api.Models.Response.NotApprovedResponse"
            }
          },
          "401": {
            "description": "User isn't authenticated.\r\n0: Authorization has been denied for this request.\r\n0: User is unauthorized to process the request."
          }
        },
        "properties": {
          "internal": false,
          "metricIds": [
            "UserModeration:GetNotApproved"
          ]
        }
      }
    }
  },
  "definitions": {
    "Roblox.UserModeration.Api.Models.Response.NotApprovedResponse": {
      "type": "object",
      "properties": {
        "punishedUserId": {
          "format": "int64",
          "description": "Gets or sets the Roblox user ID of user being moderated",
          "type": "integer"
        },
        "messageToUser": {
          "description": "Gets or sets moderator message to user",
          "type": "string"
        },
        "punishmentTypeDescription": {
          "description": "Gets or sets the punishment type description",
          "type": "string"
        },
        "punishmentId": {
          "format": "int64",
          "description": "Gets or sets the punishmentId",
          "type": "integer"
        },
        "beginDate": {
          "description": "Gets or sets the start date of punishment",
          "type": "string"
        },
        "endDate": {
          "description": "Gets or sets the end date of punishment",
          "type": "string"
        },
        "badUtterances": {
          "description": "Gets the bad utterances corresponding to the punishment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roblox.UserModeration.Client.BadUtterance"
          }
        }
      }
    },
    "Roblox.UserModeration.Client.BadUtterance": {
      "type": "object",
      "properties": {
        "abuseType": {
          "type": "string"
        },
        "utteranceText": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        }
      }
    }
  }
}